// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Data;

namespace WebApp.Migrations
{
    [DbContext(typeof(TriumphDbContext))]
    [Migration("20181227144242_ClientNotesMigration")]
    partial class ClientNotesMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("WebApp.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AssignedEmpID");

                    b.Property<string>("BusinessName");

                    b.Property<string>("DisplayName");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.HasKey("ClientID");

                    b.HasIndex("AssignedEmpID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("WebApp.Models.Client+Note", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClientId");

                    b.Property<string>("Content");

                    b.Property<string>("Title");

                    b.HasKey("NoteId");

                    b.HasIndex("ClientId");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("WebApp.Models.ClientNotes", b =>
                {
                    b.Property<int>("ClientNoteID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NoteDescription");

                    b.HasKey("ClientNoteID");

                    b.ToTable("ClientNote");
                });

            modelBuilder.Entity("WebApp.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("OwnerID");

                    b.Property<string>("State");

                    b.Property<int>("Status");

                    b.Property<string>("Zip");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("WebApp.Models.Employee", b =>
                {
                    b.Property<int>("EmpID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Notes");

                    b.Property<string>("Phone");

                    b.HasKey("EmpID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WebApp.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AssignedClientIDClientID");

                    b.Property<string>("Attributes");

                    b.Property<DateTime>("DueDate");

                    b.Property<int?>("EmployeeEmpID");

                    b.Property<string>("Name");

                    b.Property<string>("Priority");

                    b.HasKey("ID");

                    b.HasIndex("AssignedClientIDClientID");

                    b.HasIndex("EmployeeEmpID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("WebApp.Models.Client", b =>
                {
                    b.HasOne("WebApp.Models.Employee", "Assigned")
                        .WithMany()
                        .HasForeignKey("AssignedEmpID");
                });

            modelBuilder.Entity("WebApp.Models.Client+Note", b =>
                {
                    b.HasOne("WebApp.Models.Client", "Client")
                        .WithMany("Notes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApp.Models.Project", b =>
                {
                    b.HasOne("WebApp.Models.Client", "AssignedClientID")
                        .WithMany()
                        .HasForeignKey("AssignedClientIDClientID");

                    b.HasOne("WebApp.Models.Employee")
                        .WithMany("Projects")
                        .HasForeignKey("EmployeeEmpID");
                });
#pragma warning restore 612, 618
        }
    }
}
